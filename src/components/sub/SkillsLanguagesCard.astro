---
import { 
  getSkillLevel, 
  getSkillColor, 
  getLanguageLevel, 
  getLanguageColor 
} from '../../utils/helpers.js';

const { skills, languages } = Astro.props;
---
<div class="relative flex flex-col bg-white dark:bg-black shadow-sm border border-black dark:border-white rounded-xl overflow-hidden">
  
  <!-- Content Section -->
  <div class="p-5">
    <!-- Type Badge -->
    <div class="mb-3 inline-block rounded-full bg-black dark:bg-white py-1 px-3 text-xs text-white dark:text-black uppercase tracking-wide">
      Skills & Languages
    </div>
    
    <!-- Skills Section -->
    {skills && skills.length > 0 && (
      <div class="mb-6">
         <h3 class="text-lg font-bold text-black dark:text-white mb-4 flex items-center">
           <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
           </svg>
           Habilidades Técnicas
         </h3>        <div class="space-y-4">
          {skills.map((skill) => (
             <div class="bg-white dark:bg-black rounded-lg p-4 border border-black dark:border-white">              <div class="flex items-center justify-between mb-3">
                 <h4 class="font-semibold text-black dark:text-white">{skill.name}</h4>
                 <span class="text-sm font-medium text-white dark:text-black bg-black dark:bg-white px-2 py-1 rounded-full">                  {skill.level}
                </span>
              </div>
              
              <!-- Progress Bar -->
               <div class="w-full bg-white dark:bg-black rounded-full h-2 mb-3 border border-black dark:border-white">                <div 
                   class="bg-black dark:bg-white h-2 rounded-full shadow-sm"                  style={`width: ${getSkillLevel(skill.level)}%`}>
                </div>
              </div>
              
              <!-- Keywords/Technologies -->
              {skill.keywords && skill.keywords.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {skill.keywords.map((keyword) => (
                     <span class="inline-block bg-white dark:bg-black text-black dark:text-white text-xs px-2 py-1 rounded-full font-medium border border-black dark:border-white">                      {keyword}
                    </span>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Languages Section -->
    {languages && languages.length > 0 && (
      <div class="mb-4">
         <h3 class="text-lg font-bold text-black dark:text-white mb-4 flex items-center">
           <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"></path>
           </svg>
           Idiomas
         </h3>        <div class="space-y-3">
          {languages.map((lang) => (
             <div class="bg-white dark:bg-black rounded-lg p-4 border border-black dark:border-white">              <div class="flex items-center justify-between mb-3">
                 <h4 class="font-semibold text-black dark:text-white">{lang.language}</h4>
                 <span class="text-sm font-medium text-white dark:text-black bg-black dark:bg-white px-2 py-1 rounded-full">                  {lang.fluency}
                </span>
              </div>
              
              <!-- Fluency Progress Bar -->
               <div class="w-full bg-white dark:bg-black rounded-full h-2 border border-black dark:border-white">                <div 
                   class="bg-black dark:bg-white h-2 rounded-full shadow-sm"                  style={`width: ${getLanguageLevel(lang.fluency)}%`}>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
  </div>
</div>
        <div class="flex flex-col ml-3 text-sm">
           <span class="text-black dark:text-white font-semibold">Competencias</span>
           <span class="text-black dark:text-white text-xs">            {skills?.length || 0} habilidades • {languages?.length || 0} idiomas
          </span>
        </div>
      </div>
      <div class="text-right">
         <div class="text-xs text-black dark:text-white">Nivel</div>
         <div class="text-sm font-semibold text-black dark:text-white">Profesional</div>      </div>
    </div>
  </div>

  <!-- Gradient border -->
   <div class="absolute inset-0 rounded-xl bg-gradient-to-r from-black/10 dark:from-white/10 to-black/10 dark:to-white/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div></div>